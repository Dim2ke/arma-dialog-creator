#@formatter:off
#When using this bundle, try not to use control specific names like "button" or "menu". Instead, just use "control" to be more general

no_documentation=No documentation.

idc=Control id, or -1 if doesn't matter.
x=X position.
y=Y position.
w=Width of control.
h=Height of control.
type=Type of the control.
access=Read and write setting.

style=Style of the control.
moving=Whether or not this control can be dragged.
sizeEx=Font size of text.
font=Font for text.
colorText=Color of text.
colorBackground=Background color of control.
text=Text to show.
shadow=Shadow for control.
tooltip=Text to display when mouse hovers over this control.
tooltipColorShade=Tooltip background color.
tooltipColorText=Tooltip text color.
tooltipColorBox=Tooltip border color.
align=Horizontal align of text.
valign=Vertical align of text.
shadowColor=Shadow color.
blinkingPeriod=Makes the control start transparent, go to full opacity and back to full transparent in the amount of seconds specified.
soundClick=Sound to play when mouse button is released.
soundEnter=Sound to play when mouse cursor is moved over the control.
soundEscape=Sound to play when the control was clicked via the mouse, and then released outside the control area.
soundPush=Sound to play when mouse is clicked on control.
tileW=Tile's the image this many times in the x direction (need Tile Picture style (144)).
tileH=Tile's the image this many times in the y direction (need Tile Picture style (144)).
default=Whether the control will have focus upon loading the dialog.
colorFocused=Alternating background color. While the control has focus (but without the mouse pointer being over it) the background will cycle between 'colorFocused' and 'colorFocused2'. If both are the same, then the color will be steady.
colorFocused2=Alternating background color when control has focus between this value and colorFocused. If this is not set, colorBackground will be used instead.
colorBackgroundActive=Background color if "active" (i.e. mouse pointer is over it).
colorBackgroundDisabled=Background color if control is disabled.


#### EVENTS ####
onLoad=Fires when UI container is created, but no action is taken. onLoad event for display fires after onLoad events for all controls it contains are fired.\nReturns the display or control.
onUnload=Display is closed, but no controls are destroyed yet. NOTE: onUnload event doesn't fire for RscTitles displays started with cutRsc\nReturns the display and exit code.
onChildDestroyed=Child display is closed.\nReturns the display, which child display was closed and exit code.
onMouseEnter=The mouse pointer enters the control area.\nReturns control.
onMouseExit=The mouse pointer exits the control area.\nReturns control.
onSetFocus=Input focus is on control. It now begins to accept keyboard input.\nReturns control.
onKillFocus=Input focus is no longer on control. It no longer accepts keyboard input.\nReturns control.
onTimer=After amount of time given by setTimer function.\nReturns control.
onKeyDown=Pressing any keyboard key. Fired before the onKeyUp event.\nReturns the control, the keyboard code and the state of Shift, Ctrl and Alt.
onKeyUp=Releasing any keyboard key. Fired after the onKeyDown event.\nReturns the control, the keyboard code and the state of Shift, Ctrl and Alt.
onChar=When some readable characters is recognised.\nReturns the control and the char code.
onIMEChar=When IME character is recognized (used in Korean and other eastern languages).\nReturns the control and the char code.
onIMEComposition=When partial IME character is recognized (used in Korean and other eastern languages).\nReturns the control and the char code.
onJoystickButton=Pressing and releasing any joystick button.\nNot in Arma 2 or Arma 3 Returns the control and the the pressed button.
onMouseButtonDown=Pressing a mouse button. Followed by the onMouseButtonUp event.\nReturns the control, the pressed button, the x and y coordinates and the state of Shift, Ctrl and Alt.
onMouseButtonUp=Releasing a mouse button. Follows the onMouseButtonDown event.\nReturns the control, the pressed button, the x and y coordinates and the state of Shift, Ctrl and Alt.
onMouseButtonClick=Pressing and releasing a mouse button.\nReturns the control, the pressed button, the x and y coordinates and the state of Shift, Ctrl and Alt.
onMouseButtonDblClick=Pressing and releasing a mouse button twice within very short time.\nReturns the control, the pressed button, the x and y coordinates and the state of Shift, Ctrl and Alt.
onMouseMoving=Fires continuously while moving the mouse with a certain interval.\nReturns the control, the x and y coordinates relative to control and mouseOver.
onMouseHolding=Fires continuously while mouse is not moving with a certain interval.\nReturns the display, the some kind of x and y delta position.
onMouseZChanged=Fires when mouse wheel position is changed. Does not fire on disabled control. Checked with CT_EDIT type in v1.50.\nReturns the control, the x and y coordinates and mouseOver. If used with a display, the mouseOver parameter is excluded.
onCanDestroy=Ask this control if dialog can be closed (used for validation of contained data).\nReturns the display or control and the change of the scrollwheel.
onDestroy=Destroying control\nReturns the control and exit code.
onButtonClick=The attached button action is performed. When returned value is true, button's display remains opened.\nReturns the control and exit code.
onButtonDblClick=?\nReturns control.
onButtonDown=The left mouse button is pressed over the button area or a key on the keyboard is pressed.\nArma 3
onButtonUp=The left mouse buttons is released outside the button area and the attached button action is not performed.\nReturns control.
onLBSelChanged=The selection in a listbox is changed. The left mouse button has been released and the new selection is fully made.\nReturns control.
onLBListSelChanged=Selection in XCombo box changed (but value is not stored yet).\nReturns the control and the selected element index.
onLBDblClick=Double click on some row in listbox.\nReturns the control and the selected element index.
onLBDrag=Drag & drop operation started.\nReturns the control and the selected element index.
onLBDragging=Drag & drop operation is in progress.\nReturns the control and the selected element index.
onLBDrop=Drag & drop operation finished.\nReturns the control and the x and y coordinates.
onTreeSelChanged=Changing the selection in a tree.\nReturns the control and the x and y coordinates.When the Listbox is inside a ctrlGroup the eventhandler need to be added to the ctrlGroup
onTreeLButtonDown=Pressing and releasing left mouse button on a tree.\nReturns the control and the new selection path.
onTreeDblClick=Pressing and releasing twice on a tree entry.\nReturns the control.
onTreeExpanded=The tree folder structure has been expanded.\nReturns the control and the current selection path.
onTreeCollapsed=The tree folder structure has been collapsed.\nReturns the control.
onTreeMouseMove=Fires continuously while moving the mouse with a certain interval.\nReturns the control.
onTreeMouseHold=Fires continuously while mouse is not moving with a certain interval.\nReturns the control.
onTreeMouseExit=The mouse pointer exits the tree control area\nReturns the control.
onToolBoxSelChanged=Changed the selection in a toolbox.\nReturns the control.
onChecked=CheckBox checked\nReturns the control and the selected element index.
onCheckedChanged=Checked state of CheckBox changed.\nArma 3
onCheckBoxesSelChanged=Changed the selection in a checkbox.\nArma 3. Returns control and the checked state (0 or 1, not boolean).
onHTMLLink=Pressing and releasing a HTML link.\nReturns the control, the selected element index and the current state.
onSliderPosChanged=Changing the position of a slider.\nReturns the control and href.
onObjectMoved=Moving an object.\nReturns the control and the change.
onMenuSelected=Some item in context menu (used now only in new mission editor) was selected.\nReturns the control and the offset on the x, y and z axes.
onDraw=Fires when the map is drawn (can occur more than once per second).\nReturns the control and the command id.
onVideoStopped=Activated every time video ends (when looped, handler is executed after every finished loop).\nReturns the map control.